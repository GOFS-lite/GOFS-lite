{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://github.com/GOFS-lite/GOFS-lite/blob/main/reference.md#",
  "description": "This file contains operating rules enabling on-demand services between zones or within the same zone, according to time windows and calendars. At least one operating rule MUST be defined. If start_pickup_window, end_pickup_window, and end_dropoff_window are not provided, it is assumed that the on-demand service is available at any hours of the day.",
  "type": "object",
  "properties": {
    "last_updated": {
      "description": "Last time the data in the feed was updated in POSIX time.",
      "type": "integer",
      "minimum": 1450155600
    },
    "ttl": {
      "description": "Number of seconds before the data in the feed will be updated again (0 if the data should always be refreshed).",
      "type": "integer",
      "minimum": 0
    },
    "version": {
      "description": "GOFS-lite version number to which the feed conforms, according to the versioning framework (added in v1.1).",
      "type": "string",
      "enum": [
        "1.0"
      ]
    },
    "data": {
      "type": "object",
      "required": [
        "operating_rules"
      ],
      "properties": {
        "operating_rules": {
          "type": "array",
          "description": "Array that contains one object per operating rule as defined below.",
          "items": {
            "type": "object",
            "title": "A Schema",
            "required": [
              "from_zone_id",
              "to_zone_id",
              "calendars",
              "vehicle_type_id"
            ],
            "properties": {
              "from_zone_id": {
                "type": "string",
                "title": "ID from a zone defined in zones.json representing the boarding zone for the current rule."
              },
              "to_zone_id": {
                "type": "string",
                "title": "ID from a zone defined in zones.json representing the alighting zone for the current rule. from_zone_id and to_zone_id MAY reference the same zone."
              },
              "start_pickup_window": {
                "type": "string",
                "title": "Time at which the pickup starts being available in from_zone_id defined in this array. If start_pickup_window is provided, either end_pickup_window or end_dropoff_window MUST also be provided."
              },
              "end_pickup_window": {
                "type": "string",
                "title": "Time at which the pickup stops being available in from_zone_id defined in this array. If end_pickup_window is provided, start_pickup_window MUST be provided."
              },
              "calendars": {
                "type": "array",
                "title": "Array of calendar IDs from calendars.json defining the dates and days when the pickup and drop off occur.",
                "items": {
                  "type": "string",
                  "title": "A Schema",
                  "examples": [
                    "all-days"
                  ]
                }
              },
              "end_dropoff_window": {
                "type": "string"
              },
              "brand_id": {
                "type": "string"
              },
              "vehicle_type_id": {
                "description": "Array of vehicle types used for delivering the on-demand service.",
                "type": "array"
              },
              "fare_id": {
                "type": "string"
              }
            },
            "examples": [
              {
                "from_zone_id": "zoneA",
                "to_zone_id": "zoneA",
                "start_pickup_window": "06:00:00",
                "end_pickup_window": "09:00:00",
                "end_dropoff_window": "09:30:00",
                "calendars": [
                  "weekend",
                  "labor_day"
                ],
                "brand_id": "large_ride",
                "vehicle_type_id": [
                  "large_van"
                ],
                "fare_id": "RegularPrice"
              }
            ]
          },
          "minItems": 1
        }
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "last_updated",
    "ttl",
    "version",
    "data"
  ]
}
